syntax = "proto3";

package healthcheck.healthcheck;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "healthcheck/healthcheck/params.proto";
import "healthcheck/healthcheck/monitored_chains.proto";

option go_package = "healthcheck/x/healthcheck/types";

// Query defines the gRPC querier service.
service Query {
  
  // Parameters queries the parameters of the module.
  rpc Params (QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/healthcheck/healthcheck/params";
  
  }
  
  // Queries a list of MonitoredChain items.
  rpc MonitoredChain    (QueryGetMonitoredChainRequest) returns (QueryGetMonitoredChainResponse) {
    option (google.api.http).get = "/healthcheck/healthcheck/monitored_chains/{chainId}";
  
  }
  rpc MonitoredChainAll (QueryAllMonitoredChainRequest) returns (QueryAllMonitoredChainResponse) {
    option (google.api.http).get = "/healthcheck/healthcheck/monitored_chains";
  
  }
}
// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false];
}

message QueryGetMonitoredChainRequest {
  string chainId = 1;
}

message QueryGetMonitoredChainResponse {
  MonitoredChain MonitoredChain = 1 [(gogoproto.nullable) = false];
}

message QueryAllMonitoredChainRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllMonitoredChainResponse {
  repeated MonitoredChain                        MonitoredChain = 1 [(gogoproto.nullable) = false];
           cosmos.base.query.v1beta1.PageResponse pagination      = 2;
}

